makeCacheMatrix <- function(x=matrix()) {
  Inverse <- NULL

  # set the matrix
  set <- function(y) {
    x <<- y
    Inverse <<- NULL
  }

  # get the matrix
  get <- function() x

  # set the inverse of matrix
  setInverse <- function(x)  {
    Inverse <<- solve(x)
  }

  # get the inverse of marix
  getInverse <- function() Inverse


  list(set = set, get = get,
       setInvrs= setInverse,
       getInvrs= getInverse)
       
       
       
cacheSolve <- function(x, ...) {
        # Return a matrix that is the inverse of 'x'
        inv <- x$getInverse()
        
        # If the result is NULL
        # return the value inv to parent enviroment.
        if (!is.null(inv)) {
                message("getting cached data")
                return(inv)
        }
        
        data <- x$get()
        
        # And calucalte the inverse.
        inv <- solve(data, ...)
        
        # Return the inverse
        x$setInverse(inv)
        inv
}
